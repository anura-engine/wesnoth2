{
	name: { type: "string" },
	move: { type: "int" },
	hitpoints: { type: "int" },
	wounds: { type: "int", default: 0, set: "set(_data, max(0, value))" },
	current_hitpoints: "int :: hitpoints - wounds",

	inflict_combat_damage: "def(class unit source, class attack attack, int amount) ->commands
		add(wounds, max(0, amount))
	",

	attacks: { type: "[class attack]", default: [] },

	id: "string :: regex_replace(regex_replace(lower(name), ' ', '_'), '[^a-zA-Z_]', '')",

	controller: { type: "int", default: -1 },

	is_ruler: { type: "bool", default: false },

	loc: { type: "Loc", default: [-1,-1] },

	has_moved: { type: "bool", default: false },
	guard: { type: "bool", default: false },

	terrain_entry_cost: "def(string terrain) ->decimal 1.0",

	on_new_round: "def() ->commands [
		set(has_moved, false),
	]",

	possible_targets: "def(class game_state state) -> [class unit]
		filter(map(state.logical_map_assert.adjacent_tiles(loc), state.unit_at_loc(value)), value != null and state.is_enemy(controller, value.controller))
	",
}
