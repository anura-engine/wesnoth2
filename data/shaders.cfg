{
instances: [
{
	name: "hex_shader",
	new: true,
	vertex: "
		uniform mat4 u_anura_mvp_matrix;
		attribute vec2 a_anura_vertex;
		attribute vec2 a_anura_texcoord;
		varying vec2 v_texcoord;
		void main()
		{
			gl_Position = u_anura_mvp_matrix * vec4(a_anura_vertex, 0.0, 1.0);
			v_texcoord = a_anura_texcoord;
		}
	",

	fragment: "
		#version 120
		uniform sampler2D u_anura_tex_map;
		uniform sampler2D u_move_mask_tex;
		uniform bool u_have_move_mask;
		uniform float u_anura_cycle;
		uniform vec4 u_anura_draw_area;
		//uniform vec4 u_anura_sprite_area;
		varying vec2 v_texcoord;
		void main()
		{
			gl_FragColor = texture2D(u_anura_tex_map, v_texcoord);
			if(u_have_move_mask) {
				vec4 mask = texture2D(u_move_mask_tex, v_texcoord);

				float avg = (gl_FragColor[0] + gl_FragColor[1] + gl_FragColor[2])/3.0;

				vec4 desaturate = vec4(avg,avg,avg,gl_FragColor[3]);
				gl_FragColor = mix(desaturate, gl_FragColor, mask[3]);
			}

		}
	",

	create: "[
	]",

	draw: "if(move_mask_tex != null, [
		set(textures, [move_mask_tex]),
		bind_texture(move_mask_tex, 1),
		set(uniform_commands.u_move_mask_tex, 1),
		set(uniform_commands.u_have_move_mask, true),
	], [
		set(uniform_commands.u_have_move_mask, false)
	]) where move_mask_tex = if(move_mask != null, move_mask.texture)
	   where move_mask = find(level.hex_masks, value.id = 'move')
	",
}
]
}
