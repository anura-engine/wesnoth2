{
	id: "titlescreen_controller",
	is_strict: true,
	use_absolute_screen_coordinates: true,
	hidden_in_game: true,

	properties: {
		screen_width: "int<- level.dimensions[2]",
		screen_height: "int<- level.dimensions[3]",	

		_play_button: { type: "obj button_controller" },
		_multiplayer_button: { type: "obj button_controller" },
		_editor_button: { type: "obj button_controller" },

		init_controls: "def() ->commands
		spawn('button_controller', {
			text: 'Play',
			zorder: zorder+1,
			mid_x: int(screen_width/2),
			mid_y: int(screen_height/2) + lib.wesnoth.py(80),
			on_click: def() ->commands fadeout_and_exit(add_object(object_playable('game_controller', 0, 0, 1, {}))),
			use_absolute_screen_coordinates: true,
		}, [
			set(me._play_button, child)
		]);

		spawn('button_controller', {
			text: 'Multiplayer',
			zorder: zorder+1,
			mid_x: int(screen_width/2),
			mid_y: int(screen_height/2) + lib.wesnoth.py(160),
			on_click: def() ->commands spawn('login_controller', { zorder: zorder+1, _titlescreen_controller: me}),
			use_absolute_screen_coordinates: true,
		}, [
			set(me._multiplayer_button, child)
		]);
	
		spawn('button_controller', {
			text: 'Edit Map',
			zorder: zorder+1,
			mid_x: int(screen_width/2),
			mid_y: int(screen_height/2) + lib.wesnoth.py(240),
			on_click: def() ->commands fadeout_and_exit(add_object(object_playable('editor_controller', 0, 0, 1, {}))),
			use_absolute_screen_coordinates: true,
		}, [
			set(me._editor_button, child)
		]);
		
		spawn('label', {
			zorder: zorder+10,
			mid_x: int(screen_width/2),
			mid_y: int(screen_height/3) + lib.wesnoth.py(80),
			_text: ['Wesnoth: Genesis Demo'],
			use_absolute_screen_coordinates: true,
			_font_size: 80,
		});

		spawn('image_widget', {
			mid_x: int(screen_width/2),
			mid_y: int(screen_height/5),
			zorder: zorder+5,
			image: 'logo_256.png',
			image_area: [0,0,255,255],
			draw_width: 200,
			draw_height: 200,
			use_absolute_screen_coordinates: true,
		})",

		fadeout_and_exit: "def(commands|null do_when_finished) ->commands
		// Make sure we can't trigger this again while the fadeout is happening
		[set(b.on_click, def()->commands null) | b <- level.chars, b is obj button_controller];

		map(level.chars,
			animate(value, {
				alpha: 0,
			}, {
				duration: 10,
				on_complete: def()->commands [do_when_finished, remove_object(value)],
			})
		)"
	},

	events: {
		create: "[
			// The x,y position and level dimensions need to be set manually here
			set(level.dimensions, [0,0,screen_width,screen_height]);
			set(x, 0);
			set(y, 0);

			set_mouse_cursor('normal');

			init_controls()
		] where screen_width = SCREEN_WIDTH
		  where screen_height = SCREEN_HEIGHT",

		window_resize: "[
			set(level.dimensions, [0,0,new_width,new_height]),

			map(level.chars, remove_object(value));

			init_controls()
		] where new_width = max(int<- arg.width,800)-1
		  where new_height = max(int<- arg.height, 600)-1",
	}
}
