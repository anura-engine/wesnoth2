{
	id: "unit_avatar",
	is_strict: true,

	zorder: 200,

	properties: {
		unit: { type: "class unit" },
		orb: { type: "null|obj orb" },

		guard_image: { type: "null|obj image_widget" },

		controller: { type: "obj game_controller" },

		update: "def() ->commands
		execute(me,
		[
			if(unit.guard and guard_image = null, [
				spawn('image_widget', {
					image: 'guard-icon.png',
					image_area: [0,0,31,31],
					draw_width: 32,
					draw_height: 32,
					zorder: me.zorder+1,
				}, [
					set(me.guard_image, child),
				])
			]),

			if(unit.guard = false and guard_image, [
				remove_object(guard_image),
				set(guard_image, null),
			]),
		])",

		animate_movement: "def(class animation.unit_move move) ->commands execute(me,
		[
			if(size(path) >= 2, [
				controller.reserve_animation_time(size(path)*10),
				set(mid_x, controller.tile_mid_x(path[0])),
				set(mid_y, controller.tile_mid_y(path[0])),

				map(path[1:],
					animate(me, {
						mid_x: controller.tile_mid_x(value),
						mid_y: controller.tile_mid_y(value),
					}, {
						name: 'move',
						duration: 10,
						replace_existing: false,
					})
				)
			])
		]
		) where path = move.path",
	},

	on_create: "
		spawn('orb', {
			mid_x: mid_x,
			mid_y: mid_y,
			unit_avatar: me,
			is_enemy: unit.controller != controller.state.nplayer,
		}, [
			set(me.orb, child),
		])
	",

	on_process: "
	[
		if(orb, [
			set(orb.is_active, not unit.has_moved),
			set(orb.mid_x, me.mid_x - 16),
			set(orb.mid_y, me.mid_y - 20),
			set(orb.zorder, me.zorder+1),
		]),

		if(guard_image, [
			set(guard_image.x, x+20),
			set(guard_image.y, y+20),
		])
	]
	",

}
